{"version":3,"sources":["react-auth0-spa.js","components/Profile.js","components/Teams.js","components/TeamMembers.js","components/Projects.js","components/Issues.js","components/NavBar.js","components/HomeView.js","components/Dashboard.js","utils/history.js","components/PrivateRoute.js","App.js","serviceWorker.js","index.js"],"names":["DEFAULT_REDIRECT_CALLBACK","window","history","replaceState","document","title","location","pathname","Auth0Context","React","createContext","useAuth0","useContext","Profile","loading","user","src","picture","alt","name","email","JSON","stringify","TeamList","teams","setTeam","setTeams","is_leader","view","setView","waiting","setWaiting","map","team","key","id","TeamSelector","TeamButton","className","onClick","href","Teams","teamsMembership","setTeamsMembership","lead_ids","parse","x","teams_not_members","filter","indexOf","length","AddTeamMember","updateCount","setUpdateCount","teamMembers","AddMemberToTeamEmail","props","handleChange","bind","handleSubmit","state","memberemail","message","messageStatus","event","this","setState","target","value","preventDefault","fetch","method","headers","body","then","response","json","data","express","i","onSubmit","type","defaultValue","onChange","style","Component","AddMemberToTeam","membername","TeamMember","member","MemberRemoveButton","handleClick","TeamMembers","setTeamMembers","useState","useEffect","a","async","my_members","getMembers","members","sort","y","DeleteTeam","TeamDeleteButton","ProjectsManaged","projects","setProject","is_team_leader","projectlead","setProjectlead","ProjectsOther","NewProjectForm","projectname","handleLeadChange","lead_id","lead","res","ProjectList","project","ProjectSelector","ProjectButton","leader","Projects","projectsMembership","setProjects","setProjectsMembership","projects_not_members","DeleteProject","updateCountProject","setUpdateCountProject","ProjectDeleteButton","IssueList","list_name","issues_array","userID","members_by_id","by_owner","filtered_issues","issue","owner","Issue","description","NewIssueForm","issuedesc","handleOwnerChange","owner_id","Issues","issues","setIssues","setUserID","my_issues","getIssues","myID","getUserID","NavBar","isAuthenticated","loginWithRedirect","logout","isExpanded","setIsExpanded","team_name","project_name","role","data-toggle","aria-haspopup","aria-expanded","aria-labelledby","data-target","NewTeamForm","teamname","HomeView","Sidebar","rel","Dashboard","my_teams","response_by_membership","my_teams_by_membership","getTeams","my_projects","my_projects_by_membership","getProjects","createBrowserHistory","PrivateRoute","component","path","rest","appState","targetUrl","render","App","post","responseToPost","callApi","status","Error","catch","err","console","log","Boolean","hostname","match","ReactDOM","children","onRedirectCallback","initOptions","setIsAuthenticated","setUser","auth0Client","setAuth0","setLoading","popupOpen","setPopupOpen","createAuth0Client","auth0FromHook","search","includes","handleRedirectCallback","getUser","initAuth0","Provider","loginWithPopup","params","error","getIdTokenClaims","getTokenSilently","getTokenWithPopup","domain","config","client_id","clientId","redirect_uri","origin","push","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.40202791.chunk.js","sourcesContent":["// src/react-auth0-spa.js\nimport React, { useState, useEffect, useContext } from \"react\";\nimport createAuth0Client from \"@auth0/auth0-spa-js\";\n\nconst DEFAULT_REDIRECT_CALLBACK = () =>\n  window.history.replaceState({}, document.title, window.location.pathname);\n\nexport const Auth0Context = React.createContext();\nexport const useAuth0 = () => useContext(Auth0Context);\nexport const Auth0Provider = ({\n  children,\n  onRedirectCallback = DEFAULT_REDIRECT_CALLBACK,\n  ...initOptions\n}) => {\n  const [isAuthenticated, setIsAuthenticated] = useState();\n  const [user, setUser] = useState();\n  const [auth0Client, setAuth0] = useState();\n  const [loading, setLoading] = useState(true);\n  const [popupOpen, setPopupOpen] = useState(false);\n\n  useEffect(() => {\n    const initAuth0 = async () => {\n      const auth0FromHook = await createAuth0Client(initOptions);\n      setAuth0(auth0FromHook);\n\n      if (window.location.search.includes(\"code=\")) {\n        const { appState } = await auth0FromHook.handleRedirectCallback();\n        onRedirectCallback(appState);\n      }\n\n      const isAuthenticated = await auth0FromHook.isAuthenticated();\n\n      setIsAuthenticated(isAuthenticated);\n\n      if (isAuthenticated) {\n        const user = await auth0FromHook.getUser();\n        // Save the new user to the database if not already present.\n        await fetch('http://54.200.109.3:5000/add_user',{\n            method:\"POST\",\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body:JSON.stringify(user)\n        });\n        setUser(user);\n      }\n\n      setLoading(false);\n    };\n    initAuth0();\n    // eslint-disable-next-line\n  }, []);\n\n  const loginWithPopup = async (params = {}) => {\n    setPopupOpen(true);\n    try {\n      await auth0Client.loginWithPopup(params);\n    } catch (error) {\n      console.error(error);\n    } finally {\n      setPopupOpen(false);\n    }\n    const user = await auth0Client.getUser();\n    setUser(user);\n    setIsAuthenticated(true);\n  };\n\n  const handleRedirectCallback = async () => {\n    setLoading(true);\n    await auth0Client.handleRedirectCallback();\n    const user = await auth0Client.getUser();\n    setLoading(false);\n    setIsAuthenticated(true);\n    setUser(user);\n  };\n  return (\n    <Auth0Context.Provider\n      value={{\n        isAuthenticated,\n        user,\n        loading,\n        popupOpen,\n        loginWithPopup,\n        handleRedirectCallback,\n        getIdTokenClaims: (...p) => auth0Client.getIdTokenClaims(...p),\n        loginWithRedirect: (...p) => auth0Client.loginWithRedirect(...p),\n        getTokenSilently: (...p) => auth0Client.getTokenSilently(...p),\n        getTokenWithPopup: (...p) => auth0Client.getTokenWithPopup(...p),\n        logout: (...p) => auth0Client.logout(...p)\n      }}\n    >\n      {children}\n    </Auth0Context.Provider>\n  );\n};\n","// src/components/Profile.js\n\nimport React, { Fragment } from \"react\";\nimport { useAuth0 } from \"../react-auth0-spa\";\n\nconst Profile = () => {\n    const { loading, user } = useAuth0();\n\n    if (loading || !user) {\n        return <div>Loading...</div>;\n    }\n\n    return (\n        <Fragment>\n            <img src={user.picture} alt=\"Profile\" />\n            <p>This is the Profile component</p>\n            <h2>{user.name}</h2>\n            <p>{user.email}</p>\n            <code>{JSON.stringify(user, null, 2)}</code>\n        </Fragment>\n    );\n};\n\nexport default Profile;\n","// src/components/Teams.js\n// Component that displays list of teams\n\nimport React, { Fragment } from \"react\";\nimport { useAuth0 } from \"../react-auth0-spa\";\n\nconst Teams = ({teams, setTeams, teamsMembership, setTeamsMembership, team, setTeam, view, setView, waiting, setWaiting}) => {\n    const { loading, user } = useAuth0();\n\n    if (loading) {\n        return <div>Loading...</div>;\n    }\n\n    if (!user || !teams || !teamsMembership) {\n        return <li className=\"nav-item\">\n            <a className=\"nav-link\" href=\"# \">\n                <span>Not logged in</span>\n            </a>\n        </li>\n    }\n\n    // Derive teams that one is a member of but not the lead.\n    const lead_ids = JSON.parse(teams) ? JSON.parse(teams).map((x)=>x.id) : [];\n    const teams_not_members = JSON.parse(teamsMembership) ?\n        JSON.parse(teamsMembership).filter((x)=>lead_ids.indexOf(x.id)===-1) :\n        [];\n\n    return (\n        <Fragment>\n            <div className=\"sidebar-heading\">\n                <b>{lead_ids.length ? \"Teams I lead\" : \"Teams I lead (None found)\"}</b>\n            </div>\n\n            {teams.length > 0 &&\n                <TeamList\n                    teams={JSON.parse(teams)}\n                    setTeam={setTeam}\n                    setTeams={setTeams}\n                    user={user}\n                    is_leader={1}\n                    view={view}\n                    setView={setView}\n                    waiting={waiting}\n                    setWaiting={setWaiting}\n                />\n            }\n            <hr className=\"sidebar-divider my-0\" />\n            <div className=\"sidebar-heading\">\n                <b>{teams_not_members.length ? \"Other teams I belong to\" : \"Other teams I belong to (none found)\"}</b>\n            </div>\n            {teams_not_members.length > 0 &&\n                <TeamList\n                    teams={teams_not_members}\n                    setTeam={setTeam}\n                    setTeams={setTeams}\n                    user={user}\n                    is_leader={0}\n                    view={view}\n                    setView={setView}\n                    waiting={waiting}\n                    setWaiting={setWaiting}\n                />\n            }\n        </Fragment>\n    );\n};\n\n// Component to render a list of teams\nconst TeamList = ({teams, setTeam, setTeams, user, is_leader, view, setView, waiting, setWaiting}) => {\n    return (\n        <>\n            {teams.map((team)=> {\n                return <TeamSelector\n                    team={team}\n                    key={team.id}\n                    setTeam={setTeam}\n                    setTeams={setTeams}\n                    user={user}\n                    is_leader={is_leader}\n                    view={view}\n                    setView={setView}\n                    waiting={waiting}\n                    setWaiting={setWaiting}\n                />\n            })}\n        </>\n    )\n}\n\n// Selector, including possible deletion button, for a single team\nconst TeamSelector = ({team, setTeam, setTeams, user, is_leader, view, setView, waiting, setWaiting}) => {\n    return (\n        <div>\n            <TeamButton team={team} setTeam={setTeam} view={view} setView={setView} waiting={waiting} setWaiting={setWaiting}/>\n        </div>\n    )\n}\n\n// Component for an individual team button\n// Not actually a button anymore\nconst TeamButton = ({team, setTeam, view, setView, waiting, setWaiting}) => {\n    const handleClick = () => {\n        if (waiting) {return}\n        setTeam(team.id);\n        setView(\"Team\");\n    }\n    return (\n        <li className=\"nav-item\" onClick={handleClick}>\n            <a className=\"nav-link\" href=\"# \">\n                <span>{team.name}</span>\n            </a>\n        </li>\n    )\n}\n\nexport default Teams;\n","// src/components/TeamMembers.js\n// Component that allows the team leader to manage team members.\n\nimport React, { Fragment, useState, useEffect } from \"react\";\n\nconst TeamMembers = ({team, teams, user, teamMembers, setTeamMembers, waiting, setWaiting}) => {\n    const [updateCount, setUpdateCount] = useState(0);\n\n    useEffect(()=> {\n        async function getMembers() {\n            const response = await fetch('http://54.200.109.3:5000/team_members',{\n                method:\"POST\",\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body:JSON.stringify({\"team\":team})\n            });\n            const my_members = await response.json();\n\n            setTeamMembers(my_members.express);\n        }\n        getMembers();\n    },[user, team, teams, updateCount]);\n\n    // Determine if the user is the leader of the current team\n    let is_leader = 0;\n    for (let i=0; i<JSON.parse(teams).length; i++) {\n        if (JSON.parse(teams)[i].id === team) {\n            is_leader = 1;\n        }\n    }\n\n    let members = JSON.parse(teamMembers).sort((x,y)=>{\n        if (x.email === user.email && y.email !== user.email) {return -1}\n        if (y.email === user.email && x.email !== user.email) {return 1}\n        return (y.id > x.id ? 1 : -1)\n    });\n\n    return (\n        <Fragment>\n            <div className=\"col-xl-6 col-lg-7\">\n                <div className=\"card shadow mb-4\">\n                    <div className=\"card-header py-3 d-flex flex-row align-items-center justify-content-between\">\n                        <h6 className=\"m-0 font-weight-bold text-primary\">\n                            Team Members\n                        </h6>\n                    </div>\n                    <div className=\"card-body\">\n                        {members.map((x,i)=>\n                            <Fragment key={x.id}>\n                                <TeamMember\n                                    key={x.id}\n                                    member={x}\n                                    user={user}\n                                    team={team}\n                                    updateCount={updateCount}\n                                    setUpdateCount={setUpdateCount}\n                                    is_leader={is_leader}\n                                    waiting={waiting}\n                                    setWaiting={setWaiting}\n                                />\n                                {(i < members.length-1) &&\n                                    <Fragment>\n                                        <br />\n                                        <br />\n                                        <hr className=\"sidebar-divider my-0\" />\n                                        <br />\n                                    </Fragment>\n                                }\n                            </Fragment>\n                        )}\n                    </div>\n                </div>\n            </div>\n            {is_leader ? <AddTeamMember\n                user={user}\n                team={team}\n                updateCount={updateCount}\n                setUpdateCount={setUpdateCount}\n                waiting={waiting}\n                setWaiting={setWaiting}\n                teamMembers={teamMembers}\n            /> :\n                <Fragment></Fragment>\n            }\n        </Fragment>\n    )\n}\n\nconst AddTeamMember = ({user, team, updateCount, setUpdateCount, waiting, setWaiting, teamMembers}) => {\n    return (\n        <div className=\"col-xl-6 col-lg-7\">\n            <div className=\"card shadow mb-4\">\n                <div className=\"card-header py-3 d-flex flex-row align-items-center justify-content-between\">\n                    <h6 className=\"m-0 font-weight-bold text-primary\">\n                        Add Team Member\n                    </h6>\n                </div>\n\n                <div className=\"card-body\">\n                    <AddMemberToTeam\n                        user={user}\n                        team={team}\n                        updateCount={updateCount}\n                        setUpdateCount={setUpdateCount}\n                        waiting={waiting}\n                        setWaiting={setWaiting}\n                        teamMembers={teamMembers}\n                    />\n                    <br />\n                    <br />\n                    <AddMemberToTeamEmail\n                        user={user}\n                        team={team}\n                        updateCount={updateCount}\n                        setUpdateCount={setUpdateCount}\n                        waiting={waiting}\n                        setWaiting={setWaiting}\n                        teamMembers={teamMembers}\n                    />\n                </div>\n            </div>\n        </div>\n    )\n}\n\n\nclass AddMemberToTeamEmail extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.state = {memberemail:'Email',message:\"\", messageStatus:\"Failure\"};\n    }\n\n    handleChange(event) {\n        this.setState({memberemail: event.target.value});\n    }\n\n    handleSubmit(event) {\n        event.preventDefault();\n        if (this.props.waiting) {return}\n        this.props.setWaiting(1);\n\n        fetch('http://54.200.109.3:5000/add_member_email',{\n            method:\"POST\",\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body:JSON.stringify({user:this.props.user, team:this.props.team, memberemail: this.state.memberemail})\n        }).then(response=>response.json()).then(data => {\n            if (data.express === \"No such member found.\") {\n                this.setState({message: \"No user with email \"+this.state.memberemail + \" found.\"});\n                this.setState({messageStatus: \"Failure\"});\n            }\n            else {\n                this.setState({message: \"The user with email \" + this.state.memberemail + \" added to the team.\"});\n                this.setState({messageStatus: \"Success\"});\n            }\n            for (let i = 0; i<JSON.parse(this.props.teamMembers).length; i++) {\n                if (this.state.memberemail === JSON.parse(this.props.teamMembers)[i].email) {\n                    this.setState({message: \"The user with email\" + this.state.memberemail + \" is already on the team.\"});\n                    this.setState({messageStatus: \"Failure\"});\n                }\n            }\n            this.props.setUpdateCount(this.props.updateCount+1);\n            this.props.setWaiting(0);\n        })\n    }\n\n    render () {\n        return (\n            <form onSubmit={this.handleSubmit}>\n                <label>Add member to team, by email: </label>\n                <br />\n                <input type=\"text\" defaultValue={this.state.memberemail} onChange={this.handleChange} />\n                <br /><br />\n                <input type=\"submit\" value=\"Add Member\" className=\"btn btn-success\" />\n                {this.state.message.length > 0 ?\n                    <p style={{\"color\":this.state.messageStatus===\"Failure\"?\"#AA0000\":\"#00AA00\"}}>{this.state.message}</p> :\n                    <Fragment />\n                }\n            </form>\n        )\n    }\n}\n\nclass AddMemberToTeam extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.state = {membername:'Name', message:\"\", messageStatus:\"Success\"};\n    }\n\n    handleChange(event) {\n        this.setState({membername: event.target.value});\n    }\n\n    handleSubmit(event) {\n        event.preventDefault();\n        if (this.props.waiting) {return}\n        this.props.setWaiting(1);\n\n        fetch('http://54.200.109.3:5000/add_member',{\n            method:\"POST\",\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body:JSON.stringify({user:this.props.user, team:this.props.team, membername: this.state.membername})\n        }).then(response=>response.json()).then(data => {\n            if (data.express === \"No such member found.\") {\n                this.setState({message: \"No user \"+this.state.membername + \" found.\"});\n                this.setState({messageStatus: \"Failure\"});\n            }\n            else {\n                this.setState({message: this.state.membername + \" added to the team.\"});\n                this.setState({messageStatus: \"Success\"});\n            }\n            for (let i = 0; i<JSON.parse(this.props.teamMembers).length; i++) {\n                if (this.state.membername === JSON.parse(this.props.teamMembers)[i].name) {\n                    this.setState({message: this.state.membername + \" is already on the team.\"});\n                    this.setState({messageStatus: \"Failure\"});\n                }\n            }\n            this.props.setUpdateCount(this.props.updateCount+1);\n            this.props.setWaiting(0);\n        })\n    }\n\n    render () {\n        return (\n            <form onSubmit={this.handleSubmit}>\n                <label>Add member to team, by name: </label>\n                <br />\n                <input type=\"text\" defaultValue={this.state.membername} onChange={this.handleChange} />\n                <br /><br />\n                <input type=\"submit\" value=\"Add Member\" className=\"btn btn-success\" />\n                {this.state.message.length > 0 ?\n                    <p style={{\"color\":this.state.messageStatus===\"Failure\"?\"#AA0000\":\"#00AA00\"}}>{this.state.message}</p> :\n                    <Fragment />\n                }\n            </form>\n        )\n    }\n}\n\nconst TeamMember = ({member, user, team, updateCount, setUpdateCount, is_leader}) => {\n    return (\n        <Fragment>\n            <b>\n                Name:&nbsp;&nbsp;&nbsp;&nbsp;\n            </b>\n            {member.name}\n            <br />\n            <b>\n                Email:&nbsp;&nbsp;&nbsp;&nbsp;\n            </b>\n            {member.email}\n            <br />\n            {user.email === member.email ?\n                <Fragment><b>Team Leader</b></Fragment> :\n                (is_leader) && <MemberRemoveButton member={member} team={team} updateCount={updateCount} setUpdateCount={setUpdateCount}/>\n            }\n        </Fragment>\n    )\n}\n\nclass MemberRemoveButton extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleClick = this.handleClick.bind(this);\n    }\n\n    handleClick() {\n        fetch('http://54.200.109.3:5000/remove_member',{\n            method:\"POST\",\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body:JSON.stringify({member:this.props.member.id, team: this.props.team})\n        }).then(data => {\n            this.props.setUpdateCount(this.props.updateCount+1);\n        });\n    }\n\n    render () {\n        return (\n            <button onClick={this.handleClick} className=\"btn btn-danger\">\n                Remove From Team\n            </button>\n        )\n    }\n}\n\nexport default TeamMembers;\n","// src/components/Projects.js\n// Component that displays list of projects\n\nimport React from \"react\";\nimport { useAuth0 } from \"../react-auth0-spa\";\nimport TeamMembers from \"./TeamMembers\";\n\nconst Projects = ({team, teams, is_team_leader,\n    project, setProject, projectlead, setProjectlead, teamMembers, setTeamMembers,\n    projects, setProjects, projectsMembership, setProjectsMembership,\n    updateCount, setUpdateCount, view, setView, setTeams, setTeam, waiting, setWaiting}) => {\n    const { user } = useAuth0();\n\n    // Derive projects that one is a member of but not the lead.\n    const lead_ids = JSON.parse(projects) ? JSON.parse(projects).map((x)=>x.id) : [];\n    const projects_not_members = JSON.parse(projectsMembership) ?\n        JSON.parse(projectsMembership).filter((x)=>lead_ids.indexOf(x.id)===-1) :\n        [];\n\n    return (\n        <div className=\"container-fluid\">\n            <div className=\"row\">\n                <TeamMembers\n                    team={team}\n                    teams={teams}\n                    user={user}\n                    teamMembers={teamMembers}\n                    setTeamMembers={setTeamMembers}\n                    waiting={waiting}\n                    setWaiting={setWaiting}\n                />\n            </div>\n            <div className=\"row\">\n                <ProjectsManaged\n                    updateCount={updateCount}\n                    setUpdateCount={setUpdateCount}\n                    user={user}\n                    projects={JSON.parse(projects)}\n                    setProject={setProject}\n                    is_leader={1}\n                    is_team_leader={is_team_leader}\n                    projectlead={projectlead}\n                    setProjectlead={setProjectlead}\n                    view={view}\n                    setView={setView}\n                    waiting={waiting}\n                    setWaiting={setWaiting}\n                />\n\n                <ProjectsOther\n                    updateCount={updateCount}\n                    setUpdateCount={setUpdateCount}\n                    user={user}\n                    projects={projects_not_members}\n                    setProject={setProject}\n                    is_leader={0}\n                    is_team_leader={is_team_leader}\n                    projectlead={projectlead}\n                    setProjectlead={setProjectlead}\n                    view={view}\n                    setView={setView}\n                    waiting={waiting}\n                    setWaiting={setWaiting}\n                />\n            </div>\n            <div className=\"row\">\n                {(is_team_leader && <NewProjectForm\n                        updateCount={updateCount}\n                        setUpdateCount={setUpdateCount}\n                        user={user}\n                        team={team}\n                        teamMembers={teamMembers}\n                        waiting={waiting}\n                        setWaiting={setWaiting}\n                />)}\n                {(is_team_leader && <DeleteTeam\n                    user={user}\n                    team={team}\n                    setTeams={setTeams}\n                    setView={setView}\n                    setTeam={setTeam}\n                    waiting={waiting}\n                    setWaiting={setWaiting}\n                />)}\n            </div>\n        </div>\n    );\n}\n\nconst DeleteTeam = ({user, team, setTeams, setView, setTeam, waiting, setWaiting}) => {\n    return (\n        <div className=\"col-xl-6 col-lg-7\">\n            <div className=\"card shadow mb-4\">\n                <div className=\"card-header py-3 d-flex flex-row align-items-center justify-content-between\">\n                    <h6 className=\"m-0 font-weight-bold text-primary\">\n                        Delete Team\n                    </h6>\n                </div>\n                <div className=\"card-body\">\n                    <p>Delete this team.</p>\n                    <p>WARNING: you cannot undo this operation.</p>\n                    <br />\n                    <TeamDeleteButton\n                        user={user}\n                        team={team}\n                        setTeams={setTeams}\n                        setTeam={setTeam}\n                        setView={setView}\n                        waiting={waiting}\n                        setWaiting={setWaiting}\n                    />\n                </div>\n            </div>\n        </div>\n    )\n}\n\n// Component for an individual team button\nclass TeamDeleteButton extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleClick = this.handleClick.bind(this);\n    }\n\n    handleClick() {\n        if (this.props.waiting) {return}\n        this.props.setWaiting(1);\n\n        fetch('http://54.200.109.3:5000/delete_team',{\n            method:\"POST\",\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body:JSON.stringify({user:this.props.user, team: {id:this.props.team}})\n        }).then(response => response.json())\n        .then(data => {\n            this.props.setWaiting(0);\n            this.props.setTeams(data.express);\n            this.props.setTeam(0);\n            this.props.setView(\"Home\");\n        });\n    }\n\n    render () {\n        return (\n            <button onClick={this.handleClick} className=\"btn btn-danger btn-lg\">\n                Delete\n            </button>\n        )\n    }\n}\n\nconst ProjectsManaged = ({updateCount, setUpdateCount, user, projects, setProject,\n    is_leader, is_team_leader, projectlead, setProjectlead, view, setView, waiting, setWaiting}) => {\n    return (\n        <div className=\"col-xl-6 col-lg-7\">\n            <div className=\"card shadow mb-4\">\n                <div className=\"card-header py-3 d-flex flex-row align-items-center justify-content-between\">\n                    <h6 className=\"m-0 font-weight-bold text-primary\">\n                        My Managed Projects\n                    </h6>\n                </div>\n                <div className=\"card-body\">\n                    {projects.length === 0 && <p>You are not leading any projects on this team.</p>}\n                    {projects.length > 0 &&\n                        <ProjectList\n                            updateCount={updateCount}\n                            setUpdateCount={setUpdateCount}\n                            user={user}\n                            projects={projects}\n                            setProject={setProject}\n                            is_leader={1}\n                            is_team_leader={is_team_leader}\n                            projectlead={projectlead}\n                            setProjectlead={setProjectlead}\n                            view={view}\n                            setView={setView}\n                            waiting={waiting}\n                            setWaiting={setWaiting}\n                        />\n                    }\n                </div>\n            </div>\n        </div>\n    )\n}\n\nconst ProjectsOther = ({updateCount, setUpdateCount, user, projects, setProject, is_leader,\n    is_team_leader, projectlead, setProjectlead, view, setView, waiting, setWaiting}) => {\n    return (\n        <div className=\"col-xl-6 col-lg-7\">\n            <div className=\"card shadow mb-4\">\n                <div className=\"card-header py-3 d-flex flex-row align-items-center justify-content-between\">\n                    <h6 className=\"m-0 font-weight-bold text-primary\">\n                        Other Projects\n                    </h6>\n                </div>\n                <div className=\"card-body\">\n                    {projects.length === 0 && <p>You are not on any projects on this team.</p>}\n                    {projects.length > 0 &&\n                        <ProjectList\n                            updateCount={updateCount}\n                            setUpdateCount={setUpdateCount}\n                            user={user}\n                            projects={projects}\n                            setProject={setProject}\n                            is_leader={0}\n                            is_team_leader={is_team_leader}\n                            projectlead={projectlead}\n                            setProjectlead={setProjectlead}\n                            view={view}\n                            setView={setView}\n                            waiting={waiting}\n                            setWaiting={setWaiting}\n                        />\n                    }\n                </div>\n            </div>\n        </div>\n    )\n}\n\nclass NewProjectForm extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {projectname:'New Project',projectlead:0};\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleLeadChange = this.handleLeadChange.bind(this);\n    }\n\n    handleChange(event) {\n        this.setState({projectname: event.target.value});\n    }\n\n    handleLeadChange(event) {\n        this.setState({projectlead: event.target.value});\n    }\n\n    handleSubmit(event) {\n        event.preventDefault();\n\n        if (this.props.waiting) {return}\n        this.props.setWaiting(1);\n\n        const lead_id = JSON.parse(this.props.teamMembers)[this.state.projectlead].id\n\n        fetch('http://54.200.109.3:5000/new_project',{\n            method:\"POST\",\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body:JSON.stringify({user:this.props.user, lead:lead_id, team:this.props.team, projectname: this.state.projectname})\n        }).then((res) => {\n            this.props.setUpdateCount(this.props.updateCount+1);\n            this.props.setWaiting(0);\n        })\n    }\n\n    render () {\n        if (JSON.parse(this.props.teamMembers).length && !this.state.projectlead) {\n            //this.setState({projectlead: 0});\n        }\n        return (\n            <div className=\"col-xl-6 col-lg-7\">\n                <div className=\"card shadow mb-4\">\n                    <div className=\"card-header py-3 d-flex flex-row align-items-center justify-content-between\">\n                        <h6 className=\"m-0 font-weight-bold text-primary\">\n                            Create New Project\n                        </h6>\n                    </div>\n                    <div className=\"card-body\">\n                        <form onSubmit={this.handleSubmit}>\n                            <label>Create a new project:</label>\n                            <br />\n                            <input type=\"text\" defaultValue={this.state.projectname} onChange={this.handleChange} />\n                            <br /><br />\n                            Project lead:\n                            <br />\n                            <select onChange={this.handleLeadChange}>\n                                {JSON.parse(this.props.teamMembers).map((x,i) => <option key={i} value={i}>{x.name}</option>)}\n                            </select>\n                            <br /><br />\n                            <input type=\"submit\" value=\"Create Project\" className=\"btn btn-success\" />\n                        </form>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\n// Component to render a list of projects\nconst ProjectList = ({updateCount, setUpdateCount, user, projects, setProject,\n    is_leader, is_team_leader, projectlead, setProjectlead, view, setView, waiting, setWaiting}) => {\n    return (\n        <>\n            {projects.map((project)=> {\n                return <ProjectSelector\n                    updateCount={updateCount}\n                    setUpdateCount={setUpdateCount}\n                    user={user}\n                    project={project}\n                    key={project.id}\n                    setProject={setProject}\n                    is_leader={is_leader}\n                    is_team_leader={is_team_leader}\n                    projectlead={projectlead}\n                    setProjectlead={setProjectlead}\n                    view={view}\n                    setView={setView}\n                    waiting={waiting}\n                    setWaiting={setWaiting}\n                />\n            })}\n        </>\n    )\n}\n\nconst ProjectSelector = ({updateCount, setUpdateCount, user, project, setProject,\n    is_leader, is_team_leader, projectlead, setProjectlead, view, setView, waiting, setWaiting}) => {\n    return (\n        <ProjectButton\n            project={project}\n            key={project.id}\n            setProject={setProject}\n            projectlead={projectlead}\n            setProjectlead={setProjectlead}\n            view={view}\n            setView={setView}\n            waiting={waiting}\n            setWaiting={setWaiting}\n        />\n    )\n}\n\n// Component for an individual team button\nconst ProjectButton = ({project, setProject, projectlead, setProjectlead, view, setView, waiting, setWaiting}) => {\n    const handleClick = () => {\n        if (waiting) {return}\n        setProject(project.id)\n        setProjectlead(project.leader);\n        setView(\"Project\");\n    }\n    return (\n        <button\n            onClick={handleClick}\n            className=\"btn btn-primary btn-lg\"\n            style={{\"marginRight\":\"40px\", \"marginBottom\":\"40px\"}}\n        >\n            {project.name}\n        </button>\n    )\n}\n\nexport default Projects;\n","// src/components/Issues.js\n// Component that displays list of issues for a given project\n\nimport React, { Fragment, useState, useEffect } from \"react\";\nimport { useAuth0 } from \"../react-auth0-spa\";\n\nconst Issues = ({project, projectlead, teamMembers, projectsMembership,\n    updateCountProject, setUpdateCountProject, setProject, setView, is_team_leader, waiting, setWaiting}) => {\n    const { user } = useAuth0();\n    const [issues, setIssues] = useState(0);\n    const [userID, setUserID] = useState(0);\n    const [updateCount, setUpdateCount] = useState(0);\n\n    useEffect(()=> {\n        setWaiting(1);\n        async function getIssues() {\n            const response = await fetch('http://54.200.109.3:5000/issues',{\n                method:\"POST\",\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body:JSON.stringify({user:user, project:project})\n            });\n            const my_issues = await response.json();\n            setIssues(my_issues.express);\n            setWaiting(0);\n        }\n        getIssues();\n    },[user, project, updateCount, setWaiting])\n\n    useEffect(() => {\n        setWaiting(1);\n        async function getUserID() {\n            const response = await fetch('http://54.200.109.3:5000/get_id',{\n                method:\"POST\",\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body:JSON.stringify({email:user.email})\n            });\n            const myID = await response.json();\n            if (JSON.parse(myID.express).length > 0) {\n                setUserID(JSON.parse(myID.express)[0].id);\n            }\n            setWaiting(0);\n        }\n        getUserID();\n    },[user, setWaiting])\n\n    const issues_array = issues ? JSON.parse(issues) : [];\n\n    // Sort team members by ID\n    let members_by_id = {}\n    for (let i=0; i<JSON.parse(teamMembers).length; i++) {\n        members_by_id[JSON.parse(teamMembers)[i].id] = JSON.parse(teamMembers)[i]\n    }\n\n    return (\n        <div className=\"container-fluid\">\n            <div className=\"row\">\n                <IssueList\n                    list_name={\"My Open Issues\"}\n                    issues_array={issues_array}\n                    userID={userID}\n                    user={user}\n                    members_by_id={members_by_id}\n                    projectlead={projectlead}\n                    updateCount={updateCount}\n                    setUpdateCount={setUpdateCount}\n                    by_owner={true}\n                    waiting={waiting}\n                    setWaiting={setWaiting}\n                />\n                <IssueList\n                    list_name={\"Other Open Issues\"}\n                    issues_array={issues_array}\n                    userID={userID}\n                    user={user}\n                    members_by_id={members_by_id}\n                    projectlead={projectlead}\n                    updateCount={updateCount}\n                    setUpdateCount={setUpdateCount}\n                    by_owner={false}\n                    waiting={waiting}\n                    setWaiting={setWaiting}\n                />\n            </div>\n            <div className=\"row\">\n                {userID === projectlead ?\n                    <NewIssueForm\n                        user={userID}\n                        project={project}\n                        teamMembers={teamMembers}\n                        updateCount={updateCount}\n                        setUpdateCount={setUpdateCount}\n                        waiting={waiting}\n                        setWaiting={setWaiting}\n                    /> :\n                    <Fragment></Fragment>\n                }\n                {is_team_leader ?\n                    <DeleteProject\n                        updateCountProject={updateCountProject}\n                        setUpdateCountProject={setUpdateCountProject}\n                        user={user}\n                        project={project}\n                        setProject={setProject}\n                        setView={setView}\n                        waiting={waiting}\n                        setWaiting={setWaiting}\n                    /> :\n                    <Fragment></Fragment>\n                }\n            </div>\n        </div>\n    )\n}\n\nconst DeleteProject = ({updateCountProject, setUpdateCountProject, user, project, setProject, setView,\n    waiting, setWaiting}) => {\n    return (\n        <div className=\"col-xl-6 col-lg-5\">\n            <div className=\"card shadow mb-4\">\n                <div className=\"card-header py-3 d-flex flex-row align-items-center justify-content-between\">\n                    <h6 className=\"m-0 font-weight-bold text-primary\">\n                        Delete Project\n                    </h6>\n                </div>\n                <div className=\"card-body\">\n                    <p>Delete this project.</p>\n                    <p>WARNING: this operation cannot be undone.</p>\n                    <ProjectDeleteButton\n                        updateCountProject={updateCountProject}\n                        setUpdateCountProject={setUpdateCountProject}\n                        user={user}\n                        project={project}\n                        setProject={setProject}\n                        setView={setView}\n                        waiting={waiting}\n                        setWaiting={setWaiting}\n                    />\n                </div>\n            </div>\n        </div>\n    )\n}\n\n// Component for an individual team button\nclass ProjectDeleteButton extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleClick = this.handleClick.bind(this);\n    }\n\n    handleClick() {\n        if (this.props.waiting) {return}\n        this.props.setWaiting(1);\n\n        fetch('http://54.200.109.3:5000/delete_project',{\n            method:\"POST\",\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body:JSON.stringify({user:this.props.user, project: {id:this.props.project}})\n        }).then(response => response.json())\n        .then(data => {\n            this.props.setWaiting(0);\n            this.props.setUpdateCountProject(this.props.updateCountProject+1)\n            this.props.setProject(0);\n            this.props.setView(\"Team\");\n        });\n    }\n\n    render () {\n        return (\n            <button onClick={this.handleClick} className=\"btn btn-danger btn-lg\">\n                Delete\n            </button>\n        )\n    }\n}\n\nconst IssueList = ({list_name, issues_array, userID, user, members_by_id,\n        projectlead, updateCount, setUpdateCount, by_owner, waiting, setWaiting}) => {\n    let filtered_issues = issues_array.filter((issue) => (by_owner ? (issue.owner === userID):(issue.owner !== userID)))\n\n    return (\n        <div className=\"col-xl-6 col-lg-5\">\n            <div className=\"card shadow mb-4\">\n                <div className=\"card-header py-3 d-flex flex-row align-items-center justify-content-between\">\n                    <h6 className=\"m-0 font-weight-bold text-primary\">\n                        {list_name}\n                    </h6>\n                </div>\n                <div className=\"card-body\">\n                    {filtered_issues.map((issue,i)=>\n                        <Fragment key={issue.id}>\n                            <Issue\n                                    key={issue.id}\n                                    issue={issue}\n                                    userID={userID}\n                                    user={user}\n                                    members_by_id={members_by_id}\n                                    projectlead={projectlead}\n                                    updateCount={updateCount}\n                                    setUpdateCount={setUpdateCount}\n                                    waiting={waiting}\n                                    setWaiting={setWaiting}\n                            />\n                            {(i<filtered_issues.length-1) ?\n                                <Fragment>\n                                    <hr className=\"sidebar-divider my-0\"/>\n                                    <br />\n                                </Fragment> :\n                                <Fragment></Fragment>\n                            }\n                        </Fragment>\n                    )}\n                </div>\n            </div>\n        </div>\n    )\n}\n\nclass Issue extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleClick = this.handleClick.bind(this);\n    }\n\n    handleClick() {\n        if (this.props.waiting) {return}\n        this.props.setWaiting(1);\n\n        fetch('http://54.200.109.3:5000/close_issue',{\n            method:\"POST\",\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body:JSON.stringify({user:this.props.user, issue: this.props.issue.id})\n        }).then((res) => {\n            this.props.setWaiting(0);\n            this.props.setUpdateCount(this.props.updateCount+1)\n        })\n    }\n\n    render() {\n        return (\n            <div>\n                <div style={{\"float\":\"left\"}}>\n                    {this.props.issue.owner !== this.props.userID &&\n                        <p>\n                            <b>Owner: {this.props.members_by_id[this.props.issue.owner].name}</b>\n                        </p>\n                    }\n                    <p>{this.props.issue.description}</p>\n                </div>\n                <div style={{\"float\":\"right\"}}>\n                    {this.props.issue.owner === this.props.userID &&\n                        <Fragment>\n                            <button onClick={this.handleClick} className=\"btn btn-primary\">\n                                Done\n                            </button>\n                            <br /><br />\n                        </Fragment>\n                    }\n                    {this.props.userID === this.props.projectlead &&\n                        <Fragment>\n                            <button onClick={this.handleClick} className=\"btn btn-warning\">\n                                Close\n                            </button>\n                            <br /><br />\n                        </Fragment>\n                    }\n                </div>\n                <div style={{\"clear\":\"both\"}} />\n            </div>\n        )\n    }\n}\n\nclass NewIssueForm extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {issuedesc:'New Issue',owner:0};\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleOwnerChange = this.handleOwnerChange.bind(this);\n    }\n\n    handleChange(event) {\n        this.setState({issuedesc: event.target.value});\n    }\n\n    handleOwnerChange(event) {\n        const owner_id = JSON.parse(this.props.teamMembers)[event.target.value].id\n        this.setState({owner: owner_id});\n    }\n\n    handleSubmit(event) {\n        event.preventDefault();\n        if (this.props.waiting) {return}\n        this.props.setWaiting(1);\n\n        fetch('http://54.200.109.3:5000/new_issue',{\n            method:\"POST\",\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body:JSON.stringify({user:this.props.user, lead:this.state.owner, project:this.props.project, issuedesc: this.state.issuedesc})\n        }).then((res) => {\n            this.props.setUpdateCount(this.props.updateCount+1);\n            this.props.setWaiting(0);\n        })\n    }\n\n    render () {\n        if (JSON.parse(this.props.teamMembers).length && !this.state.owner) {\n            this.setState({owner: JSON.parse(this.props.teamMembers)[0].id});\n        }\n        return (\n            <div className=\"col-xl-6 col-lg-5\">\n                <div className=\"card shadow mb-4\">\n                    <div className=\"card-header py-3 d-flex flex-row align-items-center justify-content-between\">\n                        <h6 className=\"m-0 font-weight-bold text-primary\">\n                            New Issue\n                        </h6>\n                    </div>\n                    <div className=\"card-body\">\n                        <form onSubmit={this.handleSubmit}>\n                            <p><label>Open a new issue:</label></p>\n                            <input type=\"text\" defaultValue={this.state.issuedesc} onChange={this.handleChange} />\n                            <br />\n                            <p>Owner:</p>\n                            <select onChange={this.handleOwnerChange}>\n                                {JSON.parse(this.props.teamMembers).map((x,i) => <option key={i} value={i}>{x.name}</option>)}\n                            </select>\n                            <br /><br />\n                            <input type=\"submit\" value=\"Open Issue\" className=\"btn btn-success\" />\n                        </form>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Issues;\n","// src/components/NavBar.js\n\nimport React, {useState} from \"react\";\nimport { useAuth0 } from \"../react-auth0-spa\";\n\nconst NavBar = ({user, view, setView, team, teamsMembership, project, projectsMembership,\n    waiting, setWaiting}) => {\n    const { isAuthenticated, loginWithRedirect, logout } = useAuth0();\n\n    const [isExpanded, setIsExpanded] = useState(false)\n\n    // Get current team name\n    let team_name = (team && teamsMembership) ? JSON.parse(teamsMembership).filter((x)=>x.id===team)[0].name : \"\";\n\n    // Current project name\n    let project_name = \"\";\n    if (project && projectsMembership) {\n        let filtered = JSON.parse(projectsMembership).filter((x)=>x.id===project);\n        if (filtered.length) {\n            project_name = JSON.parse(projectsMembership).filter((x)=>x.id===project)[0].name\n        }\n    }\n\n    return (\n        <nav className=\"navbar navbar-expand navbar-light bg-white topbar mb-4 static-top shadow\">\n            {!isAuthenticated && (\n                <button onClick={() => loginWithRedirect({})} className=\"btn btn-primary\">Log in</button>\n            )}\n\n            {/* NEW - add a link to the home and profile pages */}\n            {isAuthenticated && (\n                <ul className=\"navbar-nav ml-auto\">\n\n                    {view === \"Home\" ?\n                        <b>Home</b> :\n                        <a href=\"# \" onClick={()=>(!waiting && setView(\"Home\"))}>Home</a>\n                    }\n\n                    <div className=\"topbar-divider d-none d-sm-block\" />\n\n                    {view === \"Team\" ?\n                        <b>Team: {team_name?team_name:\"No team selected\"}</b> :\n                        team_name ?\n                            <a href=\"# \" onClick={()=>(!waiting && setView(\"Team\"))}>Team: {team_name}</a> :\n                            <i>Team: No team selected</i>\n                    }\n\n                    <div className=\"topbar-divider d-none d-sm-block\" />\n\n                    {view === \"Project\" ?\n                        <b>Team: {project_name?project_name:\"No project selected\"}</b> :\n                        project_name ?\n                            <a href=\"# \" onClick={()=>(!waiting && setView(\"Project\"))}>Project: {project_name}</a> :\n                            <i>Project: No project selected</i>\n                    }\n                </ul>\n            )}\n            <ul className=\"navbar-nav ml-auto\">\n\n                {(isAuthenticated && user) &&\n                    <li className=\"nav-item dropdown no-arrow\">\n                        <a\n                                className=\"nav-link dropdown-toggle\"\n                                href=\"# \" id=\"userDropdown\"\n                                role=\"button\"\n                                data-toggle=\"dropdown\"\n                                aria-haspopup=\"true\"\n                                aria-expanded={isExpanded}\n                                onClick={\n                                    ()=>{\n                                        setIsExpanded(!isExpanded)\n                                    }\n                                }\n                        >\n                            <div>\n                                <span className=\"mr-2 d-none d-lg-inline text-gray-600 small\">\n                                    {user.name}\n                                </span>\n                                <img className=\"img-profile rounded-circle\" src={user.picture} alt=\"Profile\"  />\n                            </div>\n                        </a>\n                        <div className={\"dropdown-menu dropdown-menu-right shadow animated--grow-in\"+ (isExpanded?\" show\":\"\")} aria-labelledby=\"userDropdown\">\n                            <a className=\"dropdown-item\" href=\"# \" data-toggle=\"modal\" data-target=\"#logoutModal\" onClick={() => logout()}>\n                                <i className=\"fas fa-sign-out-alt fa-sm fa-fw mr-2 text-gray-400\"></i>\n                                Logout\n                            </a>\n                        </div>\n                    </li>\n                }\n            </ul>\n        </nav>\n    );\n};\n\nexport default NavBar;\n","// src/components/HomeView.js\n// The main panel for the home screen\n\nimport React from \"react\";\n\nconst HomeView = ({user, teams, setTeams, waiting, setWaiting}) => {\n    if (!user) {\n        return (\n            <p>Not logged in.</p>\n        )\n    }\n    return (\n        <div className=\"container-fluid\">\n            <div className=\"row\">\n                <div className=\"col-xl-6 col-lg-7\">\n                    <div className=\"card shadow mb-4\">\n                        <div className=\"card-header py-3 d-flex flex-row align-items-center justify-content-between\">\n                            <h6 className=\"m-0 font-weight-bold text-primary\">\n                                About Me\n                            </h6>\n                        </div>\n                        <div className=\"card-body\">\n                            <p><b>Name: </b>{user.name}</p>\n                            <p><b>Email: </b>{user.email}</p>\n                            <img src={user.picture} alt=\"Profile\" style={{\"height\":\"100px\"}} />\n                        </div>\n                    </div>\n                </div>\n                <div className=\"col-xl-6 col-lg-7\">\n                    <NewTeamForm user={user} setTeams={setTeams} waiting={waiting} setWaiting={setWaiting}/>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nclass NewTeamForm extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {teamname:'New Team'};\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleChange(event) {\n        this.setState({teamname: event.target.value});\n    }\n\n    handleSubmit(event) {\n        //alert('A name was submitted: ' + this.state.value);\n        event.preventDefault();\n\n        if (this.props.waiting) {return}\n        this.props.setWaiting(1);\n\n        fetch('http://54.200.109.3:5000/new_team',{\n            method:\"POST\",\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body:JSON.stringify({user:this.props.user, teamname: this.state.teamname})\n        }).then(response => response.json())\n        .then(data=>{\n            this.props.setWaiting(0);\n            this.props.setTeams(data.express)\n        });\n    }\n\n    render () {\n        return (\n            <div className=\"card shadow mb-4\">\n                <div className=\"card-header py-3 d-flex flex-row align-items-center justify-content-between\">\n                    <h6 className=\"m-0 font-weight-bold text-primary\">\n                        New Team\n                    </h6>\n                </div>\n                <div className=\"card-body\">\n                    <form onSubmit={this.handleSubmit}>\n                        <p><label>Create a new team:</label></p>\n                        <input type=\"text\" defaultValue={this.state.teamname} onChange={this.handleChange} />\n                        <br />\n                        <br />\n                        <input className=\"btn btn-success btn-lg\" type=\"submit\" value=\"Create Team\" />\n                    </form>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default HomeView;\n","// src/components/Dashboard.js\n// Main dashboard component.\n\nimport React, { Fragment, useState, useEffect } from \"react\";\nimport { useAuth0 } from \"../react-auth0-spa\";\nimport Teams from \"./Teams\";\nimport Projects from \"./Projects\";\nimport Issues from \"./Issues\";\nimport NavBar from \"./NavBar\";\nimport HomeView from \"./HomeView\"\n\nconst Dashboard = () => {\n    const { loading, user } = useAuth0();\n    const [teams, setTeams] = useState(0);\n    const [teamsMembership, setTeamsMembership] = useState(0);\n    const [team, setTeam] = useState(0); // The currently selected team, by id.\n    const [view, setView] = useState(\"Home\") // Which is the main pages is being viewed\n    const [project, setProject] = useState(0); // The currently selected project, by id.\n    const [projectlead, setProjectlead] = useState(0); // Leader of the currently selected project.\n    const [teamMembers, setTeamMembers] = useState(\"[]\");\n    const [projects, setProjects] = useState(0);\n    const [projectsMembership, setProjectsMembership] = useState(0);\n    const [updateCount, setUpdateCount] = useState(0);\n    const [waiting, setWaiting] = useState(0); // 1 if we are waiting for the server to return results, 0 otherwise\n\n    useEffect(()=> {\n        async function getTeams() {\n            if (!user) {return}\n            const response = await fetch('http://54.200.109.3:5000/teams',{\n                method:\"POST\",\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body:JSON.stringify(user)\n            });\n            const my_teams = await response.json();\n\n            const response_by_membership = await fetch('http://54.200.109.3:5000/teams_by_membership',{\n                method:\"POST\",\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body:JSON.stringify(user)\n            });\n            const my_teams_by_membership = await response_by_membership.json();\n\n            setTeams(my_teams.express);\n            setTeamsMembership(my_teams_by_membership.express);\n            setTeam(0); // If user changes, team should be disabled\n        }\n        getTeams();\n    },[user, teams]); // Second parameter is a list of state variables, upon which changing should prompt calling the effect.\n    // With the second parameter the empty array, the effect only runs when the component mounts.\n\n    useEffect(()=> {\n        async function getProjects() {\n            if (!user) {return}\n            const response = await fetch('http://54.200.109.3:5000/projects',{\n                method:\"POST\",\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body:JSON.stringify({user:user, team:team})\n            });\n            const my_projects = await response.json();\n\n            const response_by_membership = await fetch('http://54.200.109.3:5000/projects_by_membership',{\n                method:\"POST\",\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body:JSON.stringify({user:user, team:team})\n            });\n            const my_projects_by_membership = await response_by_membership.json();\n\n            setProjects(my_projects.express);\n            setProjectsMembership(my_projects_by_membership.express);\n            setProject(0); // If user or team changes, project should be disabled\n            setProjectlead(0);\n        }\n        getProjects();\n    },[user, team, updateCount]);\n\n    if (loading) {\n        return <div>Loading...</div>;\n    }\n\n    if (!user) {\n        return (\n            <div id=\"wrapper\">\n                <Sidebar\n                    teams={teams}\n                    setTeams={setTeams}\n                    teamsMembership={teamsMembership}\n                    setTeamsMembership={setTeamsMembership}\n                    team={team}\n                    setTeam={setTeam}\n                    view={view}\n                    setView={setView}\n                    waiting={waiting}\n                    setWaiting={setWaiting}\n                />\n                <div id=\"content-wrapper\" className=\"d-flex flex-column\">\n                    <div id=\"content\">\n                        <NavBar\n                            view={view}\n                            setView={setView}\n                            team={team}\n                            teamsMembership={teamsMembership}\n                            waiting={waiting}\n                            setWaiting={setWaiting}\n                        />\n                        <div className=\"container-fluid\">\n                            <div className=\"row\">\n                                <div className=\"col-xl-6 col-lg-7\">\n                                    <p>Welcome to the Bug Tracker. Log in to get started.</p>\n                                    <p>For more instructions or information on the project, see the <a href=\"https://github.com/michael-k-goff/bug-tracker\" target=\"_blank\" rel=\"noopener noreferrer\">GitHub</a> repo.</p>\n                                    <p>For more about the developer, see my <a href=\"https://github.com/michael-k-goff\" target=\"_blank\" rel=\"noopener noreferrer\">GitHub</a> and <a href=\"https://michael-k-goff.github.io/\" target=\"_blank\" rel=\"noopener noreferrer\">portfolio</a> pages.</p>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <footer className=\"sticky-footer bg-white\">\n                        <div className=\"container my-auto\">\n                            <div className=\"copyright text-center my-auto\">\n                                <span>Copyright &copy; Michael Goff 2020</span>\n                            </div>\n                        </div>\n                    </footer>\n                </div>\n            </div>\n        );\n    }\n\n    // Derive teams that one is a member of but not the lead.\n    const lead_ids = JSON.parse(teams) ? JSON.parse(teams).map((x)=>x.id) : [];\n    const is_team_leader = lead_ids.indexOf(team) >= 0; // Leader of currently selected team\n\n    return (\n        <div id=\"wrapper\">\n            <Sidebar\n                teams={teams}\n                setTeams={setTeams}\n                teamsMembership={teamsMembership}\n                setTeamsMembership={setTeamsMembership}\n                team={team}\n                setTeam={setTeam}\n                view={view}\n                setView={setView}\n                waiting={waiting}\n                setWaiting={setWaiting}\n            />\n            <div id=\"content-wrapper\" className=\"d-flex flex-column\">\n                <div id=\"content\">\n                    <NavBar\n                        user={user}\n                        view={view}\n                        setView={setView}\n                        team={team}\n                        teamsMembership={teamsMembership}\n                        project={project}\n                        projectsMembership={projectsMembership}\n                        waiting={waiting}\n                        setWaiting={setWaiting}\n                    />\n                    {view===\"Home\" && <HomeView\n                        user={user}\n                        teams={teams}\n                        setTeams={setTeams}\n                        waiting={waiting}\n                        setWaiting={setWaiting}\n                    />}\n                    {(team && view === \"Team\") ?\n                        <Projects\n                            team={team}\n                            teams={teams}\n                            is_team_leader={is_team_leader}\n                            view={view}\n                            project={project}\n                            setProject={setProject}\n                            projectlead={projectlead}\n                            setProjectlead={setProjectlead}\n                            teamMembers={teamMembers}\n                            setTeamMembers={setTeamMembers}\n                            projects={projects}\n                            setProjects={setProjects}\n                            projectsMembership={projectsMembership}\n                            setProjectsMembership={setProjectsMembership}\n                            updateCount={updateCount}\n                            setUpdateCount={setUpdateCount}\n                            setView={setView}\n                            setTeams={setTeams}\n                            setTeam={setTeam}\n                            waiting={waiting}\n                            setWaiting={setWaiting}\n                        />\n                        :\n                        <Fragment></Fragment>\n                    }\n                    {(team && project && view === \"Project\") ?\n                        <Issues\n                            project={project}\n                            projectlead={projectlead}\n                            teamMembers={teamMembers}\n                            projectsMembership={projectsMembership}\n                            updateCountProject={updateCount}\n                            setUpdateCountProject={setUpdateCount}\n                            setProject={setProject}\n                            setView={setView}\n                            is_team_leader={is_team_leader}\n                            waiting={waiting}\n                            setWaiting={setWaiting}\n                        /> :\n                        (view === \"Project\" && <p>No issues</p>)\n                    }\n                </div>\n                <footer className=\"sticky-footer bg-white\">\n                    <div className=\"container my-auto\">\n                        <div className=\"copyright text-center my-auto\">\n                            <span>Copyright &copy; Michael Goff 2020</span>\n                        </div>\n                    </div>\n                </footer>\n            </div>\n        </div>\n    )\n}\n\nconst Sidebar = ({teams, setTeams, teamsMembership, setTeamsMembership, team, setTeam, view, setView}) => {\n    return (\n        <ul className=\"navbar-nav bg-gradient-primary sidebar sidebar-dark accordion\" id=\"accordionSidebar\">\n            <a className=\"sidebar-brand d-flex align-items-center justify-content-center\" href=\"# \">\n                <div className=\"sidebar-brand-text mx-3\">\n                    Bug Tracker\n                </div>\n            </a>\n            <hr className=\"sidebar-divider my-0\" />\n            <Teams\n                teams={teams}\n                setTeams={setTeams}\n                teamsMembership={teamsMembership}\n                setTeamsMembership={setTeamsMembership}\n                team={team}\n                setTeam={setTeam}\n                view={view}\n                setView={setView}\n            />\n            <hr className=\"sidebar-divider my-0\" />\n            <div className=\"sidebar-heading\">\n                <b>About</b>\n            </div>\n            <li className=\"nav-item\">\n                <a className=\"nav-link\" href=\"https://github.com/michael-k-goff/bug-tracker\" target=\"_blank\" rel=\"noopener noreferrer\">\n                    <span>This project on GitHub</span>\n                </a>\n            </li>\n            <li className=\"nav-item\">\n                <a className=\"nav-link\" href=\"https://github.com/michael-k-goff\" target=\"_blank\" rel=\"noopener noreferrer\">\n                    <span>Michael's GitHub page</span>\n                </a>\n            </li>\n            <li className=\"nav-item\">\n                <a className=\"nav-link\" href=\"https://michael-k-goff.github.io/\" target=\"_blank\" rel=\"noopener noreferrer\">\n                    <span>Michael's software portfolio</span>\n                </a>\n            </li>\n        </ul>\n    )\n}\n\nexport default Dashboard;\n","// src/utils/history.js\n\nimport { createBrowserHistory } from \"history\";\nexport default createBrowserHistory();\n","// src/components/PrivateRoute.js\n\nimport React, { useEffect } from \"react\";\nimport { Route } from \"react-router-dom\";\nimport { useAuth0 } from \"../react-auth0-spa\";\n\nconst PrivateRoute = ({ component: Component, path, ...rest }) => {\n    const { loading, isAuthenticated, loginWithRedirect } = useAuth0();\n\n    useEffect(() => {\n        if (loading || isAuthenticated) {\n            return;\n        }\n        const fn = async () => {\n            await loginWithRedirect({\n                appState: { targetUrl: path }\n            });\n        };\n        fn();\n    }, [loading, isAuthenticated, loginWithRedirect, path]);\n\n    const render = props =>\n        isAuthenticated === true ? <Component {...props} /> : null;\n\n    return <Route path={path} render={render} {...rest} />;\n};\n\nexport default PrivateRoute;\n","import React, {Component} from 'react';\n\n// New - import the React Router components, and the Profile page component\nimport { Router, Route, Switch } from \"react-router-dom\";\nimport Profile from \"./components/Profile\";\nimport Dashboard from \"./components/Dashboard\";\nimport history from \"./utils/history\";\n\n// NEW - import the PrivateRoute component\nimport PrivateRoute from \"./components/PrivateRoute\";\n\nimport './startbootstrap-sb-admin-2-gh-pages/css/sb-admin-2.min.css';\n\nclass App extends Component {\n    state = {\n        response: '',\n        post: '',\n        responseToPost: '',\n    };\n\n    componentDidMount() {\n        this.callApi()\n            .then(res => this.setState({ response: res.express }))\n            .catch(err => console.log(err));\n    }\n\n    callApi = async () => {\n        const response = await fetch('http://54.200.109.3:5000/users');\n        const body = await response.json();\n        if (response.status !== 200) throw Error(body.message);\n\n        return body;\n    };\n\n    render() {\n        return (\n            <div className=\"App\">\n                {/* Don't forget to include the history module */}\n                <Router history={history}>\n                    <Switch>\n                        <PrivateRoute path=\"/profile\" component={Profile} />\n                        <Route path=\"/\" component={Dashboard} />\n                    </Switch>\n                </Router>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","// src/index.js\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { Auth0Provider } from \"./react-auth0-spa\";\nimport config from \"./auth_config.json\";\nimport history from \"./utils/history\";\n\n// A function that routes the user to the right place\n// after login\nconst onRedirectCallback = appState => {\n  history.push(\n    appState && appState.targetUrl\n      ? appState.targetUrl\n      : window.location.pathname\n  );\n};\n\nReactDOM.render(\n  <Auth0Provider\n    domain={config.domain}\n    client_id={config.clientId}\n    redirect_uri={window.location.origin}\n    onRedirectCallback={onRedirectCallback}\n  >\n    <App />\n  </Auth0Provider>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}